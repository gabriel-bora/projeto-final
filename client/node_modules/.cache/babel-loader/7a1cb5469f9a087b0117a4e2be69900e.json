{"ast":null,"code":"'use strict';\n\nvar hasSyncZlib = true;\nvar zlib = require('zlib');\nvar inflateSync = require('./sync-inflate');\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nvar SyncReader = require('./sync-reader');\nvar FilterSync = require('./filter-parse-sync');\nvar Parser = require('./parser');\nvar bitmapper = require('./bitmapper');\nvar formatNormaliser = require('./format-normaliser');\nmodule.exports = function (buffer, options) {\n  if (!hasSyncZlib) {\n    throw new Error('To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0');\n  }\n  var err;\n  function handleError(_err_) {\n    err = _err_;\n  }\n  var metaData;\n  function handleMetaData(_metaData_) {\n    metaData = _metaData_;\n  }\n  function handleTransColor(transColor) {\n    metaData.transColor = transColor;\n  }\n  function handlePalette(palette) {\n    metaData.palette = palette;\n  }\n  function handleSimpleTransparency() {\n    metaData.alpha = true;\n  }\n  var gamma;\n  function handleGamma(_gamma_) {\n    gamma = _gamma_;\n  }\n  var inflateDataList = [];\n  function handleInflateData(inflatedData) {\n    inflateDataList.push(inflatedData);\n  }\n  var reader = new SyncReader(buffer);\n  var parser = new Parser(options, {\n    read: reader.read.bind(reader),\n    error: handleError,\n    metadata: handleMetaData,\n    gamma: handleGamma,\n    palette: handlePalette,\n    transColor: handleTransColor,\n    inflateData: handleInflateData,\n    simpleTransparency: handleSimpleTransparency\n  });\n  parser.start();\n  reader.process();\n  if (err) {\n    throw err;\n  }\n\n  //join together the inflate datas\n  var inflateData = Buffer.concat(inflateDataList);\n  inflateDataList.length = 0;\n  var inflatedData;\n  if (metaData.interlace) {\n    inflatedData = zlib.inflateSync(inflateData);\n  } else {\n    var rowSize = (metaData.width * metaData.bpp * metaData.depth + 7 >> 3) + 1;\n    var imageSize = rowSize * metaData.height;\n    inflatedData = inflateSync(inflateData, {\n      chunkSize: imageSize,\n      maxLength: imageSize\n    });\n  }\n  inflateData = null;\n  if (!inflatedData || !inflatedData.length) {\n    throw new Error('bad png - invalid inflate data response');\n  }\n  var unfilteredData = FilterSync.process(inflatedData, metaData);\n  inflateData = null;\n  var bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n  unfilteredData = null;\n  var normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n  metaData.data = normalisedBitmapData;\n  metaData.gamma = gamma || 0;\n  return metaData;\n};","map":{"version":3,"names":["hasSyncZlib","zlib","require","inflateSync","deflateSync","SyncReader","FilterSync","Parser","bitmapper","formatNormaliser","module","exports","buffer","options","Error","err","handleError","_err_","metaData","handleMetaData","_metaData_","handleTransColor","transColor","handlePalette","palette","handleSimpleTransparency","alpha","gamma","handleGamma","_gamma_","inflateDataList","handleInflateData","inflatedData","push","reader","parser","read","bind","error","metadata","inflateData","simpleTransparency","start","process","Buffer","concat","length","interlace","rowSize","width","bpp","depth","imageSize","height","chunkSize","maxLength","unfilteredData","bitmapData","dataToBitMap","normalisedBitmapData","data"],"sources":["D:/Documents/QQTech/projeto-final/client/node_modules/pngjs/lib/parser-sync.js"],"sourcesContent":["'use strict';\n\nvar hasSyncZlib = true;\nvar zlib = require('zlib');\nvar inflateSync = require('./sync-inflate');\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nvar SyncReader = require('./sync-reader');\nvar FilterSync = require('./filter-parse-sync');\nvar Parser = require('./parser');\nvar bitmapper = require('./bitmapper');\nvar formatNormaliser = require('./format-normaliser');\n\n\nmodule.exports = function(buffer, options) {\n\n  if (!hasSyncZlib) {\n    throw new Error('To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0');\n  }\n\n  var err;\n  function handleError(_err_) {\n    err = _err_;\n  }\n\n  var metaData;\n  function handleMetaData(_metaData_) {\n    metaData = _metaData_;\n  }\n\n  function handleTransColor(transColor) {\n    metaData.transColor = transColor;\n  }\n\n  function handlePalette(palette) {\n    metaData.palette = palette;\n  }\n\n  function handleSimpleTransparency() {\n    metaData.alpha = true;\n  }\n\n  var gamma;\n  function handleGamma(_gamma_) {\n    gamma = _gamma_;\n  }\n\n  var inflateDataList = [];\n  function handleInflateData(inflatedData) {\n    inflateDataList.push(inflatedData);\n  }\n\n  var reader = new SyncReader(buffer);\n\n  var parser = new Parser(options, {\n    read: reader.read.bind(reader),\n    error: handleError,\n    metadata: handleMetaData,\n    gamma: handleGamma,\n    palette: handlePalette,\n    transColor: handleTransColor,\n    inflateData: handleInflateData,\n    simpleTransparency: handleSimpleTransparency\n  });\n\n  parser.start();\n  reader.process();\n\n  if (err) {\n    throw err;\n  }\n\n  //join together the inflate datas\n  var inflateData = Buffer.concat(inflateDataList);\n  inflateDataList.length = 0;\n\n  var inflatedData;\n  if (metaData.interlace) {\n    inflatedData = zlib.inflateSync(inflateData);\n  }\n  else {\n    var rowSize = ((metaData.width * metaData.bpp * metaData.depth + 7) >> 3) + 1;\n    var imageSize = rowSize * metaData.height;\n    inflatedData = inflateSync(inflateData, { chunkSize: imageSize, maxLength: imageSize });\n  }\n  inflateData = null;\n\n  if (!inflatedData || !inflatedData.length) {\n    throw new Error('bad png - invalid inflate data response');\n  }\n\n  var unfilteredData = FilterSync.process(inflatedData, metaData);\n  inflateData = null;\n\n  var bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n  unfilteredData = null;\n\n  var normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n\n  metaData.data = normalisedBitmapData;\n  metaData.gamma = gamma || 0;\n\n  return metaData;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}