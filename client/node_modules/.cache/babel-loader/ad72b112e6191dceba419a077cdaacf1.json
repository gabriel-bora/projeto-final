{"ast":null,"code":"'use strict';\n\nvar paethPredictor = require('./paeth-predictor');\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (var x = 0; x < byteWidth; x++) {\n    rawData[rawPos + x] = pxData[pxPos + x];\n  }\n}\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n  var sum = 0;\n  var length = pxPos + byteWidth;\n  for (var i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n  return sum;\n}\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n    rawData[rawPos + x] = val;\n  }\n}\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n    sum += Math.abs(val);\n  }\n  return sum;\n}\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n  for (var x = 0; x < byteWidth; x++) {\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - up;\n    rawData[rawPos + x] = val;\n  }\n}\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n  var sum = 0;\n  var length = pxPos + byteWidth;\n  for (var x = pxPos; x < length; x++) {\n    var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    var val = pxData[x] - up;\n    sum += Math.abs(val);\n  }\n  return sum;\n}\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - (left + up >> 1);\n    rawData[rawPos + x] = val;\n  }\n}\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - (left + up >> 1);\n    sum += Math.abs(val);\n  }\n  return sum;\n}\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n    rawData[rawPos + x] = val;\n  }\n}\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n    sum += Math.abs(val);\n  }\n  return sum;\n}\nvar filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth\n};\nvar filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth\n};\nmodule.exports = function (pxData, width, height, options, bpp) {\n  var filterTypes;\n  if (!('filterType' in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  } else if (typeof options.filterType === 'number') {\n    filterTypes = [options.filterType];\n  } else {\n    throw new Error('unrecognised filter types');\n  }\n  if (options.bitDepth === 16) {\n    bpp *= 2;\n  }\n  var byteWidth = width * bpp;\n  var rawPos = 0;\n  var pxPos = 0;\n  var rawData = new Buffer((byteWidth + 1) * height);\n  var sel = filterTypes[0];\n  for (var y = 0; y < height; y++) {\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      var min = Infinity;\n      for (var i = 0; i < filterTypes.length; i++) {\n        var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n  return rawData;\n};","map":{"version":3,"names":["paethPredictor","require","filterNone","pxData","pxPos","byteWidth","rawData","rawPos","x","filterSumNone","sum","length","i","Math","abs","filterSub","bpp","left","val","filterSumSub","filterUp","up","filterSumUp","filterAvg","filterSumAvg","filterPaeth","upleft","filterSumPaeth","filters","filterSums","module","exports","width","height","options","filterTypes","filterType","Error","bitDepth","Buffer","sel","y","min","Infinity"],"sources":["D:/Documents/QQTech/projeto-final/client/node_modules/pngjs/lib/filter-pack.js"],"sourcesContent":["'use strict';\n\nvar paethPredictor = require('./paeth-predictor');\n\nfunction filterNone(pxData, pxPos, byteWidth, rawData, rawPos) {\n\n  for (var x = 0; x < byteWidth; x++) {\n    rawData[rawPos + x] = pxData[pxPos + x];\n  }\n}\n\nfunction filterSumNone(pxData, pxPos, byteWidth) {\n\n  var sum = 0;\n  var length = pxPos + byteWidth;\n\n  for (var i = pxPos; i < length; i++) {\n    sum += Math.abs(pxData[i]);\n  }\n  return sum;\n}\n\nfunction filterSub(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumSub(pxData, pxPos, byteWidth, bpp) {\n\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var val = pxData[pxPos + x] - left;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterUp(pxData, pxPos, byteWidth, rawData, rawPos) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - up;\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumUp(pxData, pxPos, byteWidth) {\n\n  var sum = 0;\n  var length = pxPos + byteWidth;\n  for (var x = pxPos; x < length; x++) {\n\n    var up = pxPos > 0 ? pxData[x - byteWidth] : 0;\n    var val = pxData[x] - up;\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterAvg(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumAvg(pxData, pxPos, byteWidth, bpp) {\n\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var val = pxData[pxPos + x] - ((left + up) >> 1);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nfunction filterPaeth(pxData, pxPos, byteWidth, rawData, rawPos, bpp) {\n\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    rawData[rawPos + x] = val;\n  }\n}\n\nfunction filterSumPaeth(pxData, pxPos, byteWidth, bpp) {\n  var sum = 0;\n  for (var x = 0; x < byteWidth; x++) {\n\n    var left = x >= bpp ? pxData[pxPos + x - bpp] : 0;\n    var up = pxPos > 0 ? pxData[pxPos + x - byteWidth] : 0;\n    var upleft = pxPos > 0 && x >= bpp ? pxData[pxPos + x - (byteWidth + bpp)] : 0;\n    var val = pxData[pxPos + x] - paethPredictor(left, up, upleft);\n\n    sum += Math.abs(val);\n  }\n\n  return sum;\n}\n\nvar filters = {\n  0: filterNone,\n  1: filterSub,\n  2: filterUp,\n  3: filterAvg,\n  4: filterPaeth\n};\n\nvar filterSums = {\n  0: filterSumNone,\n  1: filterSumSub,\n  2: filterSumUp,\n  3: filterSumAvg,\n  4: filterSumPaeth\n};\n\nmodule.exports = function(pxData, width, height, options, bpp) {\n\n  var filterTypes;\n  if (!('filterType' in options) || options.filterType === -1) {\n    filterTypes = [0, 1, 2, 3, 4];\n  }\n  else if (typeof options.filterType === 'number') {\n    filterTypes = [options.filterType];\n  }\n  else {\n    throw new Error('unrecognised filter types');\n  }\n\n  if (options.bitDepth === 16) {\n    bpp *= 2;\n  }\n  var byteWidth = width * bpp;\n  var rawPos = 0;\n  var pxPos = 0;\n  var rawData = new Buffer((byteWidth + 1) * height);\n\n  var sel = filterTypes[0];\n\n  for (var y = 0; y < height; y++) {\n\n    if (filterTypes.length > 1) {\n      // find best filter for this line (with lowest sum of values)\n      var min = Infinity;\n\n      for (var i = 0; i < filterTypes.length; i++) {\n        var sum = filterSums[filterTypes[i]](pxData, pxPos, byteWidth, bpp);\n        if (sum < min) {\n          sel = filterTypes[i];\n          min = sum;\n        }\n      }\n    }\n\n    rawData[rawPos] = sel;\n    rawPos++;\n    filters[sel](pxData, pxPos, byteWidth, rawData, rawPos, bpp);\n    rawPos += byteWidth;\n    pxPos += byteWidth;\n  }\n  return rawData;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}